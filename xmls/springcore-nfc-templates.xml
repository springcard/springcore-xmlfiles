<?xml version="1.0" encoding="utf-8"?>
<springcard-multiconf-templates
	version="1.28"
	author="JDA"
>
	<tree>
	<!-- Empty node , title=NFC Templates, type=NvmTplMeta.NodeTemplateEntries -->
	<!-- Empty node , title=NFC Templates, type=NvmTplMeta.NodeTemplateRegisters -->
	<template id="id_only" name="ID Only" title="ID Only Template" hash="24hhu7n">
		<lookups>
			<lkl value="FF" title="All supported protocols" />
			<lkl value="01" title="NFC-A - ISO/IEC 14443 type A" />
			<lkl value="02" title="NFC-B - ISO/IEC 14443 type B" />
			<lkl value="03" title="NFC-A and NFC-B - ISO/IEC 14443 types A and B" />
			<lkl value="04" title="NFC-V - ISO/IEC 15693" />
			<lkl value="07" title="NFC-A, NFC-B and NFC-V - ISO/IEC 14443 types A and B and ISO/IEC 15693" />
			<lkl value="08" title="NFC-F" />
			<lkl value="0F" title="All NFC and ISO/IEC protocols" />
			<lkl value="20" title="ThinFilm / Kovio RF Barcodes" />
			<lkl value="21" title="Innovision Topaz/Jewel - NFC T1T" />
			<lkl value="22" title="ST MicroElectronics ST Family" />
			<lkl value="23" title="ASK CTS 256B and CTS 512B" />
			<lkl value="24" title="Inside Secure PicoTag (including HID iClass), protocol B" />
			<lkl value="28" title="FeliCa" />
			<lkl value="2A" title="Inside Secure PicoTag (including HID iClass), protocol V" />
			<lkl value="2C" title="Innovatron Radio Protocol (legacy Calypso cards)" />
		</lookups>
		<description>
The ID Only Template is the basic Template to read a card or tag&apos;s protocol-level IDentifier.
Pay attention that such IDs may easily be cloned or spoofed, and that NFC mobile phones as well as modern, privacy-concerned card solutions, use random protocol-level IDentifiers, that would change all the time.
		</description>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tpl24hhu7n_reg0001_slszjhl" title="Invert the ID before transmitting?" name="Swap" bitmap="C000">
				<option value="0" title="Do not invert ID bytes (the ID is transmitted &quot;as is&quot;)"/>
				<option value="1" title="RFU"/>
				<option value="2" title="Invert ID bytes for short (4-byte) ISO/IEC 14443 type A IDs"/>
				<option value="3" title="Invert ID bytes for all kind of IDs"/>
			</field>
			<field type="radios" id="tpl24hhu7n_reg0001_rsfphul" title="Padding if ID is shorted than specified length" name="Padding if ID is shorted than specified length" bitmap="2000">
				<option value="0" title="Padd with `00` on the left"/>
				<option value="1" title="Padd with `FF` on the right"/>
			</field>
			<field type="radios" id="tpl24hhu7n_reg0001_4hgd4jd" title="ID-only or all protocol bytes?" name="ID-only or all protocol bytes?" bitmap="1000">
				<option value="0" title="Read only the ID (UID-A, PUPI, etc)"/>
				<option value="1" title="Read all the protocol bytes (ATQ-A, ATQ-B, etc)"/>
			</field>
			<field type="radios" id="tpl24hhu7n_reg0001_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)"/>
				<option value="7" title="RFU"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)"/>
				<option value="14" title="Decimal, variable length"/>
				<option value="15" title="Raw (hex), variable length"/>
			</field>
		</register>
		<register id="0003" size="2" default="0000">
			<title>Location of Data</title>
			<field type="number-d" id="tpl24hhu7n_reg0003_rj665vl" title="Shift Bytes" name="Shift Bytes" bitmap="FF00" advanced="true" description="Leading bytes to suppress." />
			<field type="number-d" id="tpl24hhu7n_reg0003_gpg5rzd" title="Shift Bits" name="Shift Bits" bitmap="00FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0004" size="1" default="00" advanced="true">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tpl24hhu7n_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tpl24hhu7n_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tpl24hhu7n_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex" advanced="true"/>
				<option value="2" title="Add Card Type Token as char" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tpl24hhu7n_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="apple_vas" name="Apple VAS" title="Apple VAS Template" hash="ql55h6y">
		<lookups>
			<lkl value="D1" title="(Apple VAS)" />
		</lookups>
		<description>
Read data from an iOS mobile phone using ECP and the Apple VAS protocol.
On iOS, the Apple Wallet application allows users to organize their boarding passes, tickets, gift cards, and loyalty cards. Management of the passes is performed through the PassKit framework. NFC-enabled passes could be transmitted to a remote application through NFC, using the Apple Pay Value Added Services protocol (Apple VAS).
Once configured using this template, a SpringCore Smart Reader is able to run the Apple VAS secure transaction on its own, and transmit the data in the plain to the host.
		</description>
		<remark>
As per Apple requirements, Apple VAS should only run on top of a NFC reader that implements the Apple VAS Enhanced Contactless Polling (ECP), which is an Apple-proprietary extension of EMV and ISO/IEC 14443-A (NFC-A).
When configuring the Apple VAS template in the Smart Reader, always enable ECP in the &quot;NFC-A specific options&quot; configuration register and EMV compliance in the &quot;NFC/RFID HF compliance in poller mode&quot; configuration register.
The SpringCore firmware is only suitable to read Apple Pay VAS data, not to run Apple Pay transactions. SpringCore devices are not payment terminals.
		</remark>
		<register id="0006" size="32" default="" dynamic="true">
			<title>Merchant ID</title>
			<description>
Merchant ID of the 1st (or only) merchant. This is SHA256(*Merchant Name*).
			</description>
			<field type="raw" id="tplql55h6y_reg0006" minlength="0" maxlength="32" title="Merchant ID" dynamic="true"/>
		</register>
		<register id="0007" size="64" default="" advanced="true">
			<title>Merchant URL</title>
			<description>
*Not used*.
			</description>
			<field type="textbox" id="tplql55h6y_reg0007" maxlength="64" title="Merchant URL" default="" advanced="true"/>
		</register>
		<register id="0008" size="32" default="0000000000000000000000000000000000000000000000000000000000000000">
			<title>Merchant&apos;s Private Key</title>
			<field type="number-h" id="tplql55h6y_reg0008_5jmntfy" title="Key slot in the internal ATECC" name="Slot" bitmap="FF00000000000000000000000000000000000000000000000000000000000000" />
			<field type="raw" id="tplql55h6y_reg0008_5a737by" title="Value of ECC Private Key" name="Value" bitmap="FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" />
		</register>
		<register id="0009" size="32" default="" dynamic="true">
			<title>Merchant ID (second)</title>
			<description>
Merchant ID of the 2nd merchant. This is SHA256(*Merchant Name*).
			</description>
			<field type="raw" id="tplql55h6y_reg0009" minlength="0" maxlength="32" title="Merchant ID (second)" dynamic="true"/>
		</register>
		<register id="000A" size="64" default="" advanced="true">
			<title>Merchant URL (second)</title>
			<description>
*Not used*.
			</description>
			<field type="textbox" id="tplql55h6y_reg000a" maxlength="64" title="Merchant URL (second)" default="" advanced="true"/>
		</register>
		<register id="000B" size="32" default="0000000000000000000000000000000000000000000000000000000000000000">
			<title>Merchant&apos;s Private Key (second)</title>
			<field type="number-h" id="tplql55h6y_reg000b_5jmntfy" title="Key slot in the internal ATECC" name="Slot" bitmap="FF00000000000000000000000000000000000000000000000000000000000000" />
			<field type="raw" id="tplql55h6y_reg000b_5a737by" title="Value of ECC Private Key" name="Value" bitmap="FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplql55h6y_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplql55h6y_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplql55h6y_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplql55h6y_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplql55h6y_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplql55h6y_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`D1`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`a`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplql55h6y_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="stid_mobile_id_nfc" name="STid Mobile ID NFC" title="STid Mobile ID NFC Template" hash="u6hl75n">
		<lookups>
			<lkl value="C3" title="(STid Mobile ID NFC)" />
		</lookups>
		<description>
Read an identifier from the Orange NFC Office application running on a smartphone.
Use this template to read an identifier from the Orange NFC Office application running on a smartphone.
Orange NFC APIs for Office is a framework for NFC services, offered by Mobile Network Operator Orange. It targets user identification applications (access control, private e-purse, car park &amp; card sharing, and alikes). The services are provided by the smartphone either in host-based card emulation mode (HCE) or through a SIM card. Organisations are identified by an ApplicationId (variable length) and their organisation units by a ZoneId (on 6 bytes). A diversified AES key protects the data. Every user “belonging” to the organisation is identified by a Badge number on 10 bytes.
		</description>
	</template>
	<template id="orange_nfc_office" name="Orange NFC Office" title="Orange NFC Office Template" hash="fpocwxd">
		<lookups>
			<lkl value="C1" title="(Orange NFC Office)" />
		</lookups>
		<description>
Read an identifier from the Orange NFC Office application running on a smartphone.
Use this template to read an identifier from the Orange NFC Office application running on a smartphone.
Orange NFC APIs for Office is a framework for NFC services, offered by Mobile Network Operator Orange. It targets user identification applications (access control, private e-purse, car park &amp; card sharing, and alikes). The services are provided by the smartphone either in host-based card emulation mode (HCE) or through a SIM card. Organisations are identified by an ApplicationId (variable length) and their organisation units by a ZoneId (on 6 bytes). A diversified AES key protects the data. Every user “belonging” to the organisation is identified by a Badge number on 10 bytes.
		</description>
	</template>
	<template id="orange_nfc_retail" name="Orange NFC Retail" title="Orange NFC Retail Template" hash="5hyjhnl">
		<lookups>
			<lkl value="C0" title="(Orange NFC Retail)" />
		</lookups>
		<description>
Read an identifier from the Orange NFC Retail application running on a smartphone.
Orange NFC APIs for Retail is a framework for NFC services, offered by Mobile Network Operator Orange. It targets loyalty, couponing and alike applications.
The services rely on a general-purpose cardlet, loaded into a NFC-enabled smartphone&apos;s SIM card. Merchants and service providers are identified by a unique RetailerId (on 4 bytes). Every user “belonging” to this merchant or service provider is identified by either a unique HolderId (on 20 bytes), assigned by Orange to this very user, a CustomerId, defined freely by the merchant or service provider in association with a customer account, a LoyaltyId, defined freely by the merchant or service provider in association with a loyalty card or coupons.
		</description>
	</template>
	<template id="springblue" name="SpringBlue" title="SpringBlue Template" hash="756ugod">
		<lookups>
			<lkl value="B0" title="(SpringBlue)" />
		</lookups>
		<description>
Read a credential from **SpringCard**&apos;s SpringBlue mobile app.
		</description>
	</template>
	<template id="em4134_memory" name="EM4134 Memory" title="EM4134 Memory Template" hash="phfd7cn">
		<lookups>
			<lkl value="56" title="(EM4134 Memory)" />
		</lookups>
		<description>
Use the EM4134 Memory Template to read data from the EM MicroElectronic Marin EM4134 chip.
The reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by an absolute word number; a word is 4-byte long (yet the data may occupy more than one word).
The word number is specified in the LOC register.
		</description>
		<register id="0003" size="3" default="000000">
			<title>Location of Data</title>
			<field type="number-h" id="tplphfd7cn_reg0003_lmh6e5y" title="Address" name="Address" bitmap="FF0000" description="This is the Address of the 1st word to read; valid range is `1` to `15` (in decimal)." note="The number of words to be read is deduced from the expected length, as set in the TOF register." />
			<field type="number-d" id="tplphfd7cn_reg0003_gsqqlyn" title="Shift Bytes" name="Shift Bytes" bitmap="00FF00" advanced="true" description="Leading bytes to suppress; valid range is `0` to `3`." />
			<field type="number-d" id="tplphfd7cn_reg0003_rk4pgmy" title="Shift Bits" name="Shift Bits" bitmap="0000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplphfd7cn_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplphfd7cn_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplphfd7cn_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplphfd7cn_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplphfd7cn_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplphfd7cn_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`56`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`V`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplphfd7cn_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="google_smarttap" name="Google SmartTap" title="Google SmartTap Template" hash="bqdrmad">
		<lookups>
			<lkl value="D2" title="(Google SmartTap)" />
		</lookups>
		<description>
Read data from an Android mobile phone using the Google SmartTap protocol.
		</description>
		<remark>
When configuring the Google SmartTap template in the Smart Reader, always activate both NFC-A and NFC-B protocol, and activate EMV compliance in the &quot;NFC/RFID HF compliance in poller mode&quot; configuration register.
The SpringCore firmware is only suitable to read Google SmartTap data, not to run Google Pay transactions. SpringCore devices are not payment terminals.
		</remark>
		<register id="0003" size="4" default="00000000">
			<title>Collector ID</title>
			<description>
Collector ID of merchant system.
			</description>
			<field type="raw" id="tplbqdrmad_reg0003" minlength="4" maxlength="4" title="Collector ID"/>
		</register>
		<register id="0004" size="4" default="00000000">
			<title>Long Term Key Version</title>
			<description>
Version of the private key.
			</description>
			<field type="raw" id="tplbqdrmad_reg0004" minlength="4" maxlength="4" title="Long Term Key Version"/>
		</register>
		<register id="0005" size="32" default="0000000000000000000000000000000000000000000000000000000000000000">
			<title>Long Term Private Key</title>
			<field type="number-h" id="tplbqdrmad_reg0005_5jmntfy" title="Key slot in the internal ATECC" name="Slot" bitmap="FF00000000000000000000000000000000000000000000000000000000000000" />
			<field type="raw" id="tplbqdrmad_reg0005_5a737by" title="Value of ECC Private Key" name="Value" bitmap="FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplbqdrmad_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplbqdrmad_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplbqdrmad_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplbqdrmad_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplbqdrmad_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplbqdrmad_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`D2`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`g`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplbqdrmad_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="iso_15693_memory" name="ISO 15693 Memory" title="ISO 15693 Memory Template" hash="soaav3l">
		<lookups>
			<lkl value="54" title="(ISO 15693 Memory)" />
		</lookups>
		<description>
Use the ISO 15693 Memory Template to read data from a VICC compliant with ISO 15693-3 or a NFC-V Tag (T5T).
The reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by an absolute block number (yet the data may occupy more than one block).
According to the standard, the size of every block depends of the card (its a manufacturer&apos;s choice). Typical block sizes are 1, 2, 4 or 8 bytes.
The reader accepts block sizes up to 64 bytes. The block number is specified in the LOC register.
		</description>
		<register id="0003" size="3" default="000000">
			<title>Location of Data</title>
			<field type="number-h" id="tplsoaav3l_reg0003_lmh6e5y" title="Address" name="Address" bitmap="FF0000" description="This is the Address of the 1st page to read.
Valid range depends on the memory size of the actual VICC" note="The number of pages to be read is deduced from the expected length, as set in the TOF register." />
			<field type="number-d" id="tplsoaav3l_reg0003_gsqqlyn" title="Shift Bytes" name="Shift Bytes" bitmap="00FF00" advanced="true" description="Leading bytes to suppress; valid range is `0` to `32` (in decimal)." />
			<field type="number-d" id="tplsoaav3l_reg0003_rk4pgmy" title="Shift Bits" name="Shift Bits" bitmap="0000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplsoaav3l_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplsoaav3l_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplsoaav3l_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplsoaav3l_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplsoaav3l_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplsoaav3l_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`54`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`V`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplsoaav3l_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="mifare_classic" name="Mifare Classic" title="Mifare Classic Template" hash="nqitimn">
		<lookups>
			<lkl value="61" title="(Mifare Classic)" />
		</lookups>
		<description>
Use the Mifare Classic Template to read data from a NXP Mifare Classic PICC (Mifare Classic 1K, Mifare Classic 4K) or from any compliant PICCs (including Mifare Plus running in Security Level 14).
The reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by either:
* A sector AID in the MAD (Mifare Access Directory) of the card,
* An absolute block address.
The AID or the block address is specified in the LOC register.
		</description>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplnqitimn_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplnqitimn_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplnqitimn_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplnqitimn_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
		<register id="0003" size="5" default="0000000000">
			<title>Location of Data</title>
			<remark>
Reading can cross sector boundaries, but sector trailers are always discarded.
			</remark>
			<field type="number-h" id="tplnqitimn_reg0003_rk4phyn" title="AID" name="AID" bitmap="FFFF000000" description="AID of the sector (MSB-first)." remark="Set to `0000` to specify an absolute address in the next byte." />
			<field type="number-h" id="tplnqitimn_reg0003_2bahmzn" title="Address" name="Address" bitmap="0000FF0000" description="This is the Address of the 1st block to read.
Valid range depends on the memory size of the PICC (1K-&gt;64 blocks, 4K-&gt;256 blocks)." remark="Set to `00` to specify an AID in the previous bytes." />
			<field type="number-d" id="tplnqitimn_reg0003_3ovnoey" title="Shift Bytes" name="Shift Bytes" bitmap="000000FF00" advanced="true" description="Leading bytes to suppress; valid range is `0` to `48` (in decimal)." />
			<field type="number-d" id="tplnqitimn_reg0003_ahd4scn" title="Shift Bits" name="Shift Bits" bitmap="00000000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
			<note>
The number of blocks to be read is deduced from the expected length, as set in the TOF register.
			</note>
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplnqitimn_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplnqitimn_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplnqitimn_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`61`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`M`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0005" size="7" default="00000000000000">
			<title>Authentication</title>
			<field type="radios" id="tplnqitimn_reg0005_biavjvn" title="Type of Key" name="Type of Key" bitmap="80000000000000">
				<option value="0" title="Key A"/>
				<option value="1" title="Key B"/>
			</field>
			<field type="hidden" id="tplnqitimn_reg0005_dawm52n" name="rfu0" bitmap="7F000000000000" value="00" />
			<field type="raw" id="tplnqitimn_reg0005_gietmul" title="Value of the CRYPTO1 Secret Key" name="1" bitmap="00FFFFFFFFFFFF" description="The CRYPTO1 keys must be explicitly specified in the Templates." />
		</register>
	</template>
	<template id="mifare_ultralight" name="Mifare UltraLight" title="Mifare UltraLight Template" hash="zyob5bl">
		<lookups>
			<lkl value="62" title="(Mifare UltraLight)" />
		</lookups>
		<description>
Use the Mifare UltraLight Template to read data from a PICC within the NXP Mifare UltraLight family (including Mifare UltraLight EV1, Mifare UltraLight C, NTAG203, NTAG213, and virtually all other chips in the NTAG family).
Any PICC compliant with the NFC Forum Type 2 Tag specification may also be read using this template (but the Reader will not decode the NFC Forum NDEF data when this template is choosen).
The Reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by an absolute page number (yet the data may occupy more than one page). The page number is specified in the LOC register.
		</description>
		<register id="0003" size="3" default="000000">
			<title>Location of Data</title>
			<field type="number-h" id="tplzyob5bl_reg0003_lmh6e5y" title="Address" name="Address" bitmap="FF0000" description="This is the Address of the 1st page to read.
Valid range depends on the memory size of the actual PICC" note="The number of pages to be read is deduced from the expected length, as set in the TOF register." />
			<field type="number-d" id="tplzyob5bl_reg0003_gsqqlyn" title="Shift Bytes" name="Shift Bytes" bitmap="00FF00" advanced="true" description="Leading bytes to suppress; valid range is `0` to `48` (in decimal)." />
			<field type="number-d" id="tplzyob5bl_reg0003_rk4pgmy" title="Shift Bits" name="Shift Bits" bitmap="0000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplzyob5bl_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplzyob5bl_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplzyob5bl_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplzyob5bl_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplzyob5bl_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplzyob5bl_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`62`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`U`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplzyob5bl_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="desfire_data" name="Desfire Data" title="Desfire Data Template" hash="jlg2zcl">
		<lookups>
			<lkl value="71" title="(Desfire Data)" />
		</lookups>
		<description>
Use the Desfire File Template to read data from a NXP Desfire PICC. The PICC could be either a Desfire EV0, Desfire EV1 or Desfire EV2 (including the Desfire EV3 that uses the same cryptography).
The Reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by an Application Identifier (AID) and a File Identifier. An offset within the file could be specified. The AID and the File Identifier are specified in the LOC register.
Access to the file could involve a Mutual Authentication with the card, and the data could be transmitted either in plain, MACed/CMACed or ciphered modes. The key number, key value and communication mode are specified in the AUT register.
		</description>
		<register id="0003" size="10" default="00000000000000000000">
			<title>Location of Data</title>
			<description>
Select the Desfire AID, the File ID, and the offset/length parameters to read the file
			</description>
			<field type="number-h" id="tpljlg2zcl_reg0003_gucejpy" title="Desfire Application ID (AID)" name="Application ID" bitmap="FFFFFF00000000000000" remark="Valid range depends on the memory size of the actual PICC." note="The number of pages to read is deduced from the expected length, as set in the TOF register." />
			<field type="radios" id="tpljlg2zcl_reg0003_x6j525l" title="Read Command" name="Read Command" bitmap="000000C0000000000000" remark="Desfire EV2 commands are supported only after version 1.30.">
				<option value="0" title="Read Data, `BD` (Standard Data File or Backup Data File, all card versions)"/>
				<option value="1" title="Read Data, `AD` (Standard Data File or Backup Data File, Desfire EV2 and EV3)"/>
				<option value="2" title="Read Record, `BB` (Linear Record File or Cyclic Record File, all card versions)"/>
				<option value="3" title="Read Record, `AB` (Linear Record File or Cyclic Record File, Desfire EV2 and EV3)"/>
			</field>
			<field type="hidden" id="tpljlg2zcl_reg0003_xdeivrd" name="rfu0" bitmap="00000020000000000000" value="0" />
			<field type="hidden" id="tpljlg2zcl_reg0003_ds32kfn" name="rfu0" bitmap="00000010000000000000" value="0" />
			<field type="number-h" id="tpljlg2zcl_reg0003_bu44smy" title="File ID" name="File ID" bitmap="0000000F000000000000" />
			<field type="number-h" id="tpljlg2zcl_reg0003_bhudxsy" title="Read Offset or Record Number" name="Offset" bitmap="00000000FFFFFF000000" description="For a Standard Data File or a Backup Data File, this is the offset inside the file
For a Linear Record File or a Cyclic Record File, this is the record number" />
			<field type="number-h" id="tpljlg2zcl_reg0003_jokxtwy" title="Read Length or Record Size" name="Length" bitmap="00000000000000FF0000" description="For a Standard Data File or a Backup Data File, this is the Length parameter to be sent to the card. Set to `0` to read the while file at once.
For a Linear Record File or a Cyclic Record File, this is the record size" remark="The Reader&apos;s internal buffer is limited to 256 bytes. Do not set to `0` if the file in the card is likely to be greater than this limit." />
			<field type="number-d" id="tpljlg2zcl_reg0003_fbuk34n" title="Shift Bytes" name="Shift Bytes" bitmap="0000000000000000FF00" advanced="true" description="Leading bytes to suppress." />
			<field type="number-d" id="tpljlg2zcl_reg0003_trcl26y" title="Shift Bits" name="Shift Bits" bitmap="000000000000000000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0005" size="18" default="000000000000000000000000000000000000">
			<title>Authentication</title>
			<field type="radios" id="tpljlg2zcl_reg0005_gobxoml_f26ipjn" title="Communication Mode" name="Communication Mode" bitmap="C00000000000000000000000000000000000" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)">
				<option value="0" title="Plain" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="1" title="MAC or CMAC" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="2" title="RFU" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="3" title="Encrypted" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0005_hsgqnhd_bp5b7tl" title="Key Diversification" name="Key Diversification" bitmap="300000000000000000000000000000000000" visibleif="TPLBITS(5, 8, 8) is not 0">
				<option value="0" title="No diversification" visibleif="TPLBITS(5, 8, 8) is not 0"/>
				<option value="1" title="NXP AN10922 diversification" visibleif="TPLBITS(5, 8, 8) is not 0"/>
				<option value="2" title="RFU" visibleif="TPLBITS(5, 8, 8) is not 0"/>
				<option value="3" title="RFU" visibleif="TPLBITS(5, 8, 8) is not 0"/>
			</field>
			<field type="number-h" id="tpljlg2zcl_reg0005_hsgqnhd_qxqw7kl" title="Key Index inside the Desfire Application" name="Key Index" bitmap="0F0000000000000000000000000000000000" visibleif="TPLBITS(5, 8, 8) is not 0" />
			<field type="radios" id="tpljlg2zcl_reg0005_gtnexal_ittxm3y" title="Location of Secret Key" name="Location of Secret Key" bitmap="00E000000000000000000000000000000000" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0">
				<option value="0" title="Key is provided within the Template" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="1" title="Internal SAM AV, select key slot and version automatically" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="2" title="Internal SAM AV, key slot is specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="3" title="Internal SAM AV, key slot and version are specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="5" title="SAM AV in 1st slot, select key slot and version automatically" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="6" title="SAM AV in 1st slot, key slot is specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="7" title="SAM AV in 1st slot, key slot and version are specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0005_53qjfly_f4xxhhn" title="Use SAM for Session" name="Use SAM for Session" bitmap="001000000000000000000000000000000000" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)">
				<option value="0" title="Get Session Key from the SAM" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)"/>
				<option value="1" title="Use the SAM as passthrough" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0005_owh5twn" title="Authentication Method" name="Authentication Method" bitmap="000F00000000000000000000000000000000">
				<option value="0" title="No authentication"/>
				<option value="1" title="Desfire EV0 DES/3DES authentication (Authenticate command)"/>
				<option value="2" title="Desfire EV1 DES/3DES authentication (AuthenticateIso command)"/>
				<option value="3" title="Desfire EV1 AES authentication (AuthenticateAes command)"/>
				<option value="4" title="Desfire EV2 AES authentication (AuthenticateEV2 command)"/>
				<option value="15" title="Ask the SAM AV"/>
			</field>
			<field type="number-h" id="tpljlg2zcl_reg0005_jmj5tbn_gki2gwd" title="Key slot in the SAM AV" name="Slot" bitmap="0000FF000000000000000000000000000000" visibleif="(TPLBITS(5, 8, 4) is not 0) and ((TPLBITS(5, 12, 4) is 2) or (TPLBITS(5, 12, 4) is 3) or (TPLBITS(5, 12, 4) is 6) or (TPLBITS(5, 12, 4) is 7))" />
			<field type="number-h" id="tpljlg2zcl_reg0005_yaxrnmn_2gcbgsy" title="Key version" name="Version" bitmap="000000FF0000000000000000000000000000" visibleif="(TPLBITS(5, 8, 4) is not 0) and ((TPLBITS(5, 12, 4) is 3) or (TPLBITS(5, 12, 4) is 7))" />
			<field type="raw" id="tpljlg2zcl_reg0005_hcjrwjl_7dkocnd" title="Value of DES/3DES or AES Secret Key" name="Value" bitmap="0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 12, 4) is 0)" />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
This register defines the transport protocol and the behaviour of the Reader during the handshaking.
It is also possible for the Reader to add a token to its output, to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tpljlg2zcl_reg0004_m6awtjl" name="rfu0" bitmap="80" value="0" />
			<field type="radios" id="tpljlg2zcl_reg0004_op23zml" title="ECP2 Session closing" name="ECP2 Session closing" bitmap="40">
				<option value="0" title="Normal Desfire card"/>
				<option value="1" title="Apple ECP2 Desfire emulation"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0004_ax7h6sl" title="Iso 7816 Wrapping" name="Iso 7816 Wrapping" bitmap="20">
				<option value="0" title="Use native Desfire command format"/>
				<option value="1" title="Use ISO 7816 Wrapping of Desfire commands"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0004_t6r55rl" title="Select Application" name="Select Application" bitmap="10">
				<option value="0" title="Do not send ISO 7816 SelectApplication(Desfire)"/>
				<option value="1" title="Send ISO 7816 SelectApplication(Desfire) before processing"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tpljlg2zcl_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add `71` hex value as Card Type Token" advanced="true"/>
				<option value="2" title="Add `D` char as Card Type Token" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tpljlg2zcl_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="desfire_id" name="Desfire ID" title="Desfire ID Template" hash="hvnvpdd">
		<lookups>
			<lkl value="70" title="(Desfire ID)" />
		</lookups>
		<description>
Use the Desfire ID Template to get the actual ID of an NXP Desfire PICC with Random ID enabled at protocol level. The PICC could be either a Desfire EV0 or a Desfire EV1.
		</description>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplhvnvpdd_reg0001_slszjhl" title="Invert the ID before transmitting?" name="Swap" bitmap="C000">
				<option value="0" title="Do not invert ID bytes (order is `040...80`)"/>
				<option value="3" title="Invert ID bytes (order is `80...04`)"/>
			</field>
			<field type="hidden" id="tplhvnvpdd_reg0001_rsfphul" name="rfu0" bitmap="2000" value="0" />
			<field type="hidden" id="tplhvnvpdd_reg0001_4hgd4jd" name="rfu0" bitmap="1000" value="0" />
			<field type="radios" id="tplhvnvpdd_reg0001_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)"/>
				<option value="7" title="RFU"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)"/>
				<option value="14" title="Decimal, variable length"/>
				<option value="15" title="Raw (hex), variable length"/>
			</field>
		</register>
		<register id="0003" size="5" default="0000000000">
			<title>Location of Data</title>
			<description>
Select the Desfire AID
			</description>
			<field type="number-h" id="tplhvnvpdd_reg0003_gpgdxvl" title="Desfire Application ID (AID)" name="Application ID" bitmap="FFFFFF0000" remark="Leave empty or set to `000000` to use a plain GET VERSION command." />
			<field type="number-d" id="tplhvnvpdd_reg0003_3ovnoey" title="Shift Bytes" name="Shift Bytes" bitmap="000000FF00" advanced="true" description="Leading bytes to suppress." />
			<field type="number-d" id="tplhvnvpdd_reg0003_ahd4scn" title="Shift Bits" name="Shift Bits" bitmap="00000000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0005" size="18" default="000000000000000000000000000000000000">
			<title>Authentication</title>
			<field type="radios" id="tplhvnvpdd_reg0005_gobxoml_f26ipjn" title="Communication Mode" name="Communication Mode" bitmap="C00000000000000000000000000000000000" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)">
				<option value="0" title="Plain" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="1" title="MAC or CMAC" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="2" title="RFU" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
				<option value="3" title="Encrypted" visibleif="(TPLBITS(5, 8, 8) is not 0) and (TPLBITS(5, 0, 4) is not 0)"/>
			</field>
			<field type="hidden" id="tplhvnvpdd_reg0005_hsgqnhd_bp5b7tl" name="rfu0" bitmap="300000000000000000000000000000000000" value="0" />
			<field type="number-h" id="tplhvnvpdd_reg0005_hsgqnhd_qxqw7kl" title="Key Index inside the Desfire Application" name="Key Index" bitmap="0F0000000000000000000000000000000000" visibleif="TPLBITS(5, 8, 8) is not 0" />
			<field type="radios" id="tplhvnvpdd_reg0005_gtnexal_ittxm3y" title="Location of Secret Key" name="Location of Secret Key" bitmap="00E000000000000000000000000000000000" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0">
				<option value="0" title="Key is provided within the Template" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="1" title="Internal SAM AV, select key slot and version automatically" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="2" title="Internal SAM AV, key slot is specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="3" title="Internal SAM AV, key slot and version are specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="5" title="SAM AV in 1st slot, select key slot and version automatically" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="6" title="SAM AV in 1st slot, key slot is specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
				<option value="7" title="SAM AV in 1st slot, key slot and version are specified" advanced="true" visibleif="TPLBITS(5, 8, 4) is not 0"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0005_53qjfly_f4xxhhn" title="Use SAM for Session" name="Use SAM for Session" bitmap="001000000000000000000000000000000000" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)">
				<option value="0" title="Get Session Key from the SAM" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)"/>
				<option value="1" title="Use the SAM as passthrough" advanced="true" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 13, 3) is not 0)"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0005_owh5twn" title="Authentication Method" name="Authentication Method" bitmap="000F00000000000000000000000000000000">
				<option value="0" title="No authentication"/>
				<option value="1" title="Desfire EV0 DES/3DES authentication (Authenticate command)"/>
				<option value="2" title="Desfire EV1 DES/3DES authentication (AuthenticateIso command)"/>
				<option value="3" title="Desfire EV1 AES authentication (AuthenticateAes command)"/>
				<option value="4" title="Desfire EV2 AES authentication (AuthenticateEV2 command)"/>
				<option value="15" title="Ask the SAM AV"/>
			</field>
			<field type="number-h" id="tplhvnvpdd_reg0005_jmj5tbn_gki2gwd" title="Key slot in the SAM AV" name="Slot" bitmap="0000FF000000000000000000000000000000" visibleif="(TPLBITS(5, 8, 4) is not 0) and ((TPLBITS(5, 12, 4) is 2) or (TPLBITS(5, 12, 4) is 3) or (TPLBITS(5, 12, 4) is 6) or (TPLBITS(5, 12, 4) is 7))" />
			<field type="number-h" id="tplhvnvpdd_reg0005_yaxrnmn_2gcbgsy" title="Key version" name="Version" bitmap="000000FF0000000000000000000000000000" visibleif="(TPLBITS(5, 8, 4) is not 0) and ((TPLBITS(5, 12, 4) is 3) or (TPLBITS(5, 12, 4) is 7))" />
			<field type="raw" id="tplhvnvpdd_reg0005_hcjrwjl_7dkocnd" title="Value of DES/3DES or AES Secret Key" name="Value" bitmap="0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" visibleif="(TPLBITS(5, 8, 4) is not 0) and (TPLBITS(5, 12, 4) is 0)" />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
This register defines the transport protocol and the behaviour of the Reader during the handshaking.
It is also possible for the Reader to add a token to its output, to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplhvnvpdd_reg0004_m6awtjl" name="rfu0" bitmap="80" value="0" />
			<field type="radios" id="tplhvnvpdd_reg0004_op23zml" title="ECP2 Session closing" name="ECP2 Session closing" bitmap="40">
				<option value="0" title="Normal Desfire card"/>
				<option value="1" title="Apple ECP2 Desfire emulation"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0004_ax7h6sl" title="Iso 7816 Wrapping" name="Iso 7816 Wrapping" bitmap="20">
				<option value="0" title="Use native Desfire command format"/>
				<option value="1" title="Use ISO 7816 Wrapping of Desfire commands"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0004_t6r55rl" title="Select Application" name="Select Application" bitmap="10">
				<option value="0" title="Do not send ISO 7816 SelectApplication(Desfire)"/>
				<option value="1" title="Send ISO 7816 SelectApplication(Desfire) before processing"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplhvnvpdd_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add `70` hex value as Card Type Token" advanced="true"/>
				<option value="2" title="Add `D` char as Card Type Token" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplhvnvpdd_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="ndef_data" name="NDEF Data" title="NDEF Data Template" hash="25z45sd">
		<lookups>
			<lkl value="4E" title="All NFC Forum Tags" />
			<lkl value="4F" title="All NFC Forum Tags and SNEP peers (P2P mode)" />
			<lkl value="41" title="NFC Forum type 1 Tags (T1T)" />
			<lkl value="42" title="NFC Forum type 2 Tags (T2T / NFC-A)" />
			<lkl value="43" title="NFC Forum type 3 Tags (T3T / NFC-F)" />
			<lkl value="44" title="NFC Forum type 4 Tags (T4T on NFC-A and NFC-B)" />
			<lkl value="45" title="NFC Forum type 5 Tags (T5T / NFC-V)" />
			<lkl value="4A" title="NFC Forum type 4A Tags (T4T on NFC-A only)" />
			<lkl value="4B" title="NFC Forum type 4B Tags (T4T on NFC-B only)" />
			<lkl value="40" title="SNEP peers (P2P mode)" />
		</lookups>
		<description>
Use the NDEF Data Template to read the content of either a card formatted according to the NFC Forum Tag specification, or to receive a message through NFC beam (SNEP over LLCP).
		</description>
		<register id="0005" size="1" default="00">
			<title>Type Name and Format</title>
			<description>
Specify the TNF of the NDEF messages to accept. Messages with another TNF will be discarded.
			</description>
			<field type="radios" id="tpl25z45sd_reg0005_5znnnnn" title="Type Name and Format" name="" bitmap="FF" description="TNF Filter">
				<option value="1" title="NFC Forum Well-known record (NFC RTD)"/>
				<option value="2" title="NFC Forum Media record (RFC 2046)"/>
				<option value="3" title="Absolute URI record (RFC 3986)"/>
				<option value="4" title="NFC Forum External record (NFC RTD)"/>
				<option value="83" title="Read a SpringCard data entry"/>
				<option value="84" title="Read a Text (either a Well-known record with type `T` or a `text/plain` Media record)"/>
				<option value="85" title="Read an URI (either a Well-known record with type `U` or an Absolute URI record)"/>
				<option value="255" title="Read either a SpringCard data entry, a Text or an URI"/>
			</field>
		</register>
		<register id="0006" size="32" default="" visibleif="TPLBITS(5, 4, 4) is 0">
			<title>Type Filter</title>
			<description>
Specify the actual Type of the NDEF Record you want to read.
Please refer to the specifications of NFC Forum NDEF Data and Records, and to the specifications of the MIME Media, to provide a valid TNF+Type combination.
			</description>
			<remark>
This field is relevant only if TNF is either `01`, `02`, `03` or `04`; otherwise, its content is ignored.
			</remark>
			<field type="textbox" id="tpl25z45sd_reg0006" maxlength="32" title="Type Filter" default="" visibleif="TPLBITS(5, 4, 4) is 0"/>
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tpl25z45sd_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tpl25z45sd_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tpl25z45sd_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0003" size="2" default="0000">
			<title>Location of Data</title>
			<field type="number-d" id="tpl25z45sd_reg0003_rj665vl" title="Shift Bytes" name="Shift Bytes" bitmap="FF00" advanced="true" description="Leading bytes to suppress." />
			<field type="number-d" id="tpl25z45sd_reg0003_gpg5rzd" title="Shift Bits" name="Shift Bits" bitmap="00FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tpl25z45sd_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tpl25z45sd_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tpl25z45sd_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`4F`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`N`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tpl25z45sd_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="iso_data" name="ISO Data" title="ISO Data Template" hash="33v6b6l">
		<lookups>
			<lkl value="13" title="ISO-DEP on NFC-A and NFC-B - ISO/IEC 14443-4 'T=CL' types A and B" />
			<lkl value="11" title="ISO-DEP on NFC-A - ISO/IEC 14443-4 'T=CL' type A" />
			<lkl value="12" title="ISO-DEP on NFC-B - ISO/IEC 14443-4 'T=CL' type B" />
			<lkl value="72" title="Innovatron Radio Protocol (legacy Calypso cards)" />
		</lookups>
		<description>
ISO/IEC 7816-4 is the standard for smart card commands. Most contactless smartcards use the ISO/IEC 7816-4 on top of a ISO/IEC 14443-4 &apos;T=CL&apos; or &quot;ISO-DEP&quot; communication channel.
According to this standard, the card is structured as a (lightweight) file-system, providing Directory Files and Elementary Files.
The standard-defined Instruction-set allows to navigate in the smartcard&apos;s directories and file tree, and to read the data from its files.
Every Instruction call is named an &quot;APDU&quot;.
The card&apos;s Response to every Instruction is always terminated by a 2-B Status Word which denotes the success (values `9xxx`, typically `9000`) or the failure (values `6xxx`).
Using this ISO/IEC 7816-4 Template, the Reader is able to send 1, 2 or 3 APDUs and to extract the data from the card&apos;s last Response.
		</description>
		<remark>
This Template is suitable to read data on virtually any contactless smartcard, provided that said data is accessible in the plain and without prior authentication.
Reading data from a secure smartcard (such as Desfire) or an NFC applications (such as Apple VAS and Google SmartTap) is possible only using a dedicated Template that implements both the application-specific security and Instruction-set at once.
		</remark>
		<register id="0005" size="32" default="" dynamic="true">
			<title>1st APDU</title>
			<description>
This is typically a SELECT APPLICATION or a SELECT DIRECTORY Instruction.
			</description>
			<remark>
The Reader checks the Status Word. In case of any error (SW!=`9xxx`), the Template is terminated.
			</remark>
			<field type="raw" id="tpl33v6b6l_reg0005" minlength="0" maxlength="32" title="1st APDU" dynamic="true"/>
		</register>
		<register id="0006" size="32" default="" dynamic="true">
			<title>2nd APDU</title>
			<description>
This is typically a SELECT FILE Instruction.
			</description>
			<remark>
The Reader checks the Status Word. In case of any error (SW!=`9xxx`), the Template is terminated.
			</remark>
			<field type="raw" id="tpl33v6b6l_reg0006" minlength="0" maxlength="32" title="2nd APDU" dynamic="true"/>
		</register>
		<register id="0007" size="32" default="" dynamic="true">
			<title>3rd APDU</title>
			<description>
This is typically a READ BINARY or READ RECORD Instruction.
			</description>
			<remark>
The Reader checks the Status Word. In case of any error (SW!=`9xxx`), the Template is terminated.
			</remark>
			<field type="raw" id="tpl33v6b6l_reg0007" minlength="0" maxlength="32" title="3rd APDU" dynamic="true"/>
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tpl33v6b6l_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tpl33v6b6l_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tpl33v6b6l_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0003" size="2" default="0000">
			<title>Location of Data</title>
			<field type="number-d" id="tpl33v6b6l_reg0003_rj665vl" title="Shift Bytes" name="Shift Bytes" bitmap="FF00" advanced="true" description="Leading bytes to suppress." />
			<field type="number-d" id="tpl33v6b6l_reg0003_gpg5rzd" title="Shift Bits" name="Shift Bits" bitmap="00FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tpl33v6b6l_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tpl33v6b6l_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tpl33v6b6l_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`1F`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`T`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tpl33v6b6l_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="mifare_plus_sl3" name="Mifare Plus SL3" title="Mifare Plus SL3 Template" hash="vsbmlpn">
		<lookups>
			<lkl value="63" title="(Mifare Plus SL3)" />
		</lookups>
		<description>
Use the Mifare Plus SL3 Template to read data from a NXP Mifare Plus PICC (Mifare Plus 2K, Mifare Plus 4K) running in Security Level 3.
The reader may either
* Read arbitrary data; the data will be transmitted in hexadecimal format. To do so, select the RAW mode in TOF register.
* Read a number (decimal output). To do so, select the decimal mode in TOF register.
* Read a string (ASCII-encoded data). To do so, select either the Short String or the Long String mode in TOF register.
The target data is pointed to by either:
* A sector AID in the MAD (Mifare Access Directory) of the card,
* An absolute block address.
The AID or the block address is specified in the LOC register.
		</description>
		<register id="0003" size="5" default="0000000000">
			<title>Location of Data</title>
			<remark>
Reading can cross sector boundaries, but sector trailers are always discarded.
			</remark>
			<field type="number-h" id="tplvsbmlpn_reg0003_rk4phyn" title="AID" name="AID" bitmap="FFFF000000" description="AID of the sector (MSB-first)." remark="Set to `0000` to specify an absolute address in the next byte." />
			<field type="number-h" id="tplvsbmlpn_reg0003_2bahmzn" title="Address" name="Address" bitmap="0000FF0000" description="This is the Address of the 1st block to read.
Valid range depends on the memory size of the PICC (1K-&gt;64 blocks, 4K-&gt;256 blocks)." remark="Set to `00` to specify an AID in the previous bytes." />
			<field type="number-d" id="tplvsbmlpn_reg0003_3ovnoey" title="Shift Bytes" name="Shift Bytes" bitmap="000000FF00" advanced="true" description="Leading bytes to suppress; valid range is `0` to `48` (in decimal)." />
			<field type="number-d" id="tplvsbmlpn_reg0003_ahd4scn" title="Shift Bits" name="Shift Bits" bitmap="00000000FF" advanced="true" description="Leading bits to suppress; valid range is `0` to `7`." />
			<note>
The number of blocks to be read is deduced from the expected length, as set in the TOF register.
			</note>
		</register>
		<register id="0005" size="17" default="0000000000000000000000000000000000">
			<title>Authentication</title>
			<field type="radios" id="tplvsbmlpn_reg0005_fgspoil" title="Type of Key" name="Type of Key" bitmap="8000000000000000000000000000000000">
				<option value="0" title="Key A"/>
				<option value="1" title="Key B"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0005_ulx3ghy" title="Location of Secret Key" name="Location of Secret Key" bitmap="6000000000000000000000000000000000">
				<option value="0" title="Key is provided in the Template"/>
				<option value="1" title="Internal SAM AV"/>
				<option value="3" title="SAM AV in 1st slot"/>
			</field>
			<field type="hidden" id="tplvsbmlpn_reg0005_mbubfud" name="rfu0" bitmap="1800000000000000000000000000000000" value="0" />
			<field type="radios" id="tplvsbmlpn_reg0005_ax6yead" title="Read mode" name="Read mode" bitmap="0700000000000000000000000000000000">
				<option value="0" title="Read encrypted, MAC on command, no MAC on response"/>
				<option value="1" title="Read encrypted, MAC on command, MAC on response"/>
				<option value="2" title="Read in plain, MAC on command, no MAC on response"/>
				<option value="3" title="Read in plain, MAC on command, MAC on response"/>
				<option value="4" title="Read encrypted, no MAC on command, no MAC on response"/>
				<option value="5" title="Read encrypted, no MAC on command, MAC on response"/>
				<option value="6" title="Read in plain, no MAC on command, no MAC on response"/>
				<option value="7" title="Read in plain, no MAC on command, MAC on response"/>
			</field>
			<field type="number-h" id="tplvsbmlpn_reg0005_duvyuvl_yq2hdrd" title="Key slot in the SAM AV" name="Slot" bitmap="00FF000000000000000000000000000000" visibleif="(TPLBITS(5, 5, 2) is not 0)" />
			<field type="raw" id="tplvsbmlpn_reg0005_7b4gasl_vjputzd" title="Value of the AES Secret Key" name="Value" bitmap="00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF" visibleif="(TPLBITS(5, 5, 2) is 0)" />
		</register>
		<register id="0001" size="2" default="0000">
			<title>Output Size and Format</title>
			<field type="radios" id="tplvsbmlpn_reg0001_ut4pn2n_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Transmit the sequence of bytes as is" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Transmit the sequence of bytes in reverse order" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_ut4pn2n_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_ut4pn2n_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Padd with `0` on the left" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Padd with `F` on the right" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_ut4pn2n_4hgd4jd" title="Remove leading zeroes?" name="Clean" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Keep all digits" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Suppress `0` digits on the left of the Data" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_ut4pn2n_ytndzhn" title="Length and Format" name="Length and Format" bitmap="0F00" visibleif="(TPLBITS(1, 6, 1) is 0)">
				<option value="0" title="Decimal, 10 digits (truncation on 4-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="1" title="Raw (hex), 4 bytes (32 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="2" title="Raw (hex), 8 bytes (64 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="3" title="Raw (hex), 5 bytes (40 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="4" title="Raw (hex), 10 bytes (80 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="5" title="Raw (hex), 7 bytes (56 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="6" title="Raw (hex), 11 bytes (88 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="7" title="RFU" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="8" title="Raw (hex), 16 bytes (128 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="9" title="Raw (hex), 20 bytes (160 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="10" title="Raw (hex), 24 bytes (196 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="11" title="Raw (hex), 32 bytes (256 bits)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="12" title="Decimal, 12 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="13" title="Decimal, 13 digits (truncation on 5-B)" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="14" title="Decimal, variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
				<option value="15" title="Raw (hex), variable length" visibleif="(TPLBITS(1, 6, 1) is 0)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_oahnb5l_2kglign" title="Invert Data?" name="Swap" bitmap="8000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Transmit the sequence of characters as is" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Transmit the sequence of characters in reverse order" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_oahnb5l_7wdxe6d" title="Mode" name="Mode" bitmap="4000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="RAW Mode (Data is a numerical value)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="String Mode (Data is an ASCII string)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_oahnb5l_rsfphul" title="Padding if Data is shorted than specified length" name="Padding" bitmap="2000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Variable length (no padding)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Padd with ` ` (space characters) on the right until the specified length" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0001_oahnb5l_4hgd4jd" title="Short string or Long string?" name="Long" bitmap="1000" visibleif="(TPLBITS(1, 6, 1) is 1)">
				<option value="0" title="Short string (truncate to 16 characters or less)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
				<option value="1" title="Long string (more than 16 characters)" visibleif="(TPLBITS(1, 6, 1) is 1)"/>
			</field>
			<field type="dropdownlist" id="tplvsbmlpn_reg0001_ovqgvtl_ytndzhn" title="Length" name="Length" bitmap="0F00" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))">
				<option value="0" title="16 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="1" title="1 character" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="2" title="2 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="3" title="3 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="4" title="4 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="5" title="5 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="6" title="6 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="7" title="7 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="8" title="8 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="9" title="9 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="10" title="10 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="11" title="11 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="12" title="12 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="13" title="13 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="14" title="14 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
				<option value="15" title="15 characters" visibleif="((TPLBITS(1, 6, 1) is 1)) and ((TPLBITS(1, 4, 1) is 0))"/>
			</field>
			<field type="number-d" id="tplvsbmlpn_reg0001_inpjjkn_gpg5rzd" title="Options for Long String" name="Options for Long String" bitmap="00FF" visibleif="(TPLBITS(1, 6, 1) is 1) and (TPLBITS(1, 4, 1) is 1)" description="Use this byte to specify the exact length to read from the card. Valid range is `1` to `255`." />
		</register>
		<register id="0004" size="1" default="00">
			<title>Options</title>
			<description>
If this register is set, the Reader adds a token to its output to tell the receiver what kind of credential has been read.
			</description>
			<field type="hidden" id="tplvsbmlpn_reg0004_g65secl" name="rfu0" bitmap="F0" value="0" />
			<field type="radios" id="tplvsbmlpn_reg0004_rgq7qed_efr3mkd" title="Position of the Card Type Token" name="Position of the Card Type Token" bitmap="0C" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0">
				<option value="0" title="Before the Prefix" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="1" title="After the Prefix, before the Data" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="2" title="After the Data (before the Suffix)" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
				<option value="3" title="RFU" advanced="true" visibleif="TPLBITS(4, 2, 2) is not 0"/>
			</field>
			<field type="radios" id="tplvsbmlpn_reg0004_khxezgy" title="Add a Card Type Token to the output stream?" name="Card Type Token" bitmap="03" advanced="true">
				<option value="0" title="Do not add a Card Type Token" advanced="true"/>
				<option value="1" title="Add Card Type Token in hex (`63`)" advanced="true"/>
				<option value="2" title="Add Card Type Token as char (`M`)" advanced="true"/>
				<option value="3" title="RFU" advanced="true"/>
			</field>
		</register>
		<register id="0002" size="8" default="">
			<title>Prefix</title>
			<description>
A Template-specific Prefix, that is added after the Reader&apos;s global Prefix.
			</description>
			<remark>
Use `\\t` for a Tab, `\\n` for Enter, `\\b` for Back space, `\\v` for Vertical space.
			</remark>
			<field type="textbox" id="tplvsbmlpn_reg0002" maxlength="8" title="Prefix" default=""/>
		</register>
	</template>
	<template id="pan" name="PAN" title="PAN Template" hash="a2a63zl">
		<lookups>
			<lkl value="73" title="(PAN)" />
		</lookups>
		<description>
Read a 16-digit PAN
		</description>
	</template>
	</tree>
</springcard-multiconf-templates>
